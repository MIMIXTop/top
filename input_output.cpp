#include "input_output.h"

using namespace std;

void write(MyZavod* zavod)
{
    *zavod->product = NULL;
    string s;

    s = test("Введите название товара:  ", 3);

    s.copy(zavod->product, s.size() + 1);
    zavod->product[s.size()] = '\0';

    s = test("Введите сколько произвели этого товара: ", 1);

    zavod->numbers = stoi(s);

    s = test("Введите сколько продали этого товара: ", 1);

    zavod->sale = stoi(s);

    while ( zavod->sale > zavod->numbers) {
        cout << "Введены не коректные данные" << endl;
        s = test("Введите сколько продали этого товара: ", 1);
        zavod->sale = stoi(s);
    }

    s = test("Введите цену одного товара: ", 4);
    
    while (true)
    {
        
    try
    {
        zavod->one_pr = stod(s);
        break;
    }
    catch(const std::exception& e)
    {
        cout << "Введено неправильное значение\n";
    }
    
        s = test("Введите цену одного товара: ", 4);

    }

    while (zavod->one_pr <= 0) {
        cout << "Ты пытаешься меня обмануть такого не может быть" << endl;
        s = test("Введите цену одного товара: ", 4);
        zavod->one_pr = stod(s);
    }


    s = test("Введите себестоимость товара: ", 4);

    zavod->cost_price = stod(s);

 while (true)
    {
    
    try
    {
        zavod->cost_price = stod(s);
        break;
    }
    catch(const std::exception& e)
    {
        cout << "Введено неправильное значение\n";
    }
    
        s = test("Введите цену одного товара: ", 4);

    }

    while (zavod->cost_price <= 0 || zavod->cost_price > zavod->one_pr) {
        cout << "Ты пытаешься меня обмануть такого не может быть" << endl;
        s = test("Введите себестоимость товара: ", 1);
        zavod->cost_price = stod(s);
    }



    zavod->profit = zavod->sale * (zavod->one_pr - zavod->cost_price);
}


void main_menu() {
        cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Работа с данными                                          |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Работа с файлами                                          |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Сортировка и поиск                                        |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 4.Выход из программы                                        |\n";
    cout << "|-------------------------------------------------------------|\n";
    
}

void menu_str() {
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Добавить структуру в стек                                 |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Удалить структуру из стека                                |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Вывести данные в консоль                                  |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 4.Поменять две элемента стек местами                        |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 5.Изменение данных в структуре                              |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 6.Выйти в главное меню                                      |\n";
    cout << "|-------------------------------------------------------------|\n";
}

void del() {
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Удалить весь стек                                         |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Удалить структуру из стека                                |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Вернуться назад                                           |\n";
    cout << "|-------------------------------------------------------------|\n";


}

void menu_file() {
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Создать новый файл                                        |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Удалить файл                                              |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Сохранить данные в файл                                   |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 4.Выгрузидь данные из файла                                 |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 5.Выйти в главное меню                                      |\n";
    cout << "|-------------------------------------------------------------|\n";
}

void menu_out() {
        cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Вывести ввиде структуры                                   |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Вывести ввиде таблицы                                     |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Вернуться                                                 |\n";
    cout << "|-------------------------------------------------------------|\n";
}

void menu_sort() {

    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Меню сортировки                                           |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Вывести ввиде таблицы                                     |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Вернуться                                                 |\n";
    cout << "|-------------------------------------------------------------|\n";

}
 
void menu_fields(){
       cout << "|-------------------------------------------------------------|\n";
    cout << "| Выберите поле                                               |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Название                                                  |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Произведено                                               |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Продано                                                   |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 4.Цена                                                      |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 5.Себестоимость                                             |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 6.Прибыль                                                   |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 7.Вернуться                                                 |\n";
    cout << "|-------------------------------------------------------------|\n";
}

void menu_fields1(){
    cout << "|-------------------------------------------------------------|\n";
    cout << "| Выберите поле                                               |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Название                                                  |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Произведено                                               |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Продано                                                   |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 4.Цена                                                      |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 5.Себестоимость                                             |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 6.Прибыль                                                   |\n";
    cout << "|-------------------------------------------------------------|\n";
}

void type_sort() {

    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Сортировать от меньшего к большему                        |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Сортировать от большего к меньшему                        |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Вернуться                                                 |\n";
    cout << "|-------------------------------------------------------------|\n";
}

void sort_string() {

        cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Сортировать от а до я(от a до z)                          |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Сортировать от я до а(от z до a)                          |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Вернуться                                                 |\n";
    cout << "|-------------------------------------------------------------|\n";
}

void sort_find() {
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 1.Cортировка                                                |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 2.Поиск                                                     |\n";
    cout << "|-------------------------------------------------------------|\n";
    cout << "| 3.Вернуться                                                 |\n";
    cout << "|-------------------------------------------------------------|\n";
}

bool isValidInput(const string& input) {
    for (char ch : input) {
        if (!((ch >= 'a' && ch <= 'z') or (ch >= 'A' && ch <= 'Z') or
            (ch >= 'а' && ch <= 'я') or (ch >= 'А' && ch <= 'Я') or (ch == ' '))) {
            return false;
        }
    }
    return true;
}

bool isValidInputN(const string& input) {
    if (input.size() == 0) {
        return false;
    }
    for (char ch : input) {
        if (!isdigit(ch)) {
            return false;
        }
    }
    return true;
}

string test(string message, int n) {
    
    string s;
    int count = 0;
    int lenght;

    switch (n)
    {
    case 1:// проверка на int
        
        cin.clear();
        while (true) {

            cout << message;

            getline(cin, s);
            if(s.length() <= 15)
            if (isValidInputN(s)) {
                if (stol(s) < 0)
                    break;
                return s;
            }
            cout << "Неправильный ввод !!!\n";
        }
        break;
    case 2:// проверка на название файла 

        while (true) {
            cout << message << endl;

            getline(cin, s);

            if (s.length() <= 40)
            if (s.size() > 4) {
                if (s[s.size() - 4] == '.') {
                    if ((s[s.size() - 3] == 't') and (s[s.size() - 2] == 'x') and (s[s.size() - 1] == 't')) {
                        return s;
                    }

                }
            }
            cout << "Неправильный ввод !!!\n";
        }

        break;
    case 3:// проверка на струку 
        while (true) {
            cout << message << endl;

            getline(cin, s);

            if (s.length() <= 15)
            if (s.size() > 0) {
                if (isValidInput(s)) {
                    return s;
                }
                cout << "Неправильный ввод !!!\n";
            }
        }
        break;
    case 4:// проверка на double

        while (true) {
            cout << message << endl;

            getline(cin, s);
            if (s.length() <= 15){
                lenght = s.size();
                lenght--;
                if (s.length() > 0) {
                    for (int i = 0; i < s.length(); i++) {
                        if (!((s[i] == '.') or (s[i] >= '0') or (s[i] <= '9')) or (s[i] == ',')) {

                            break;
                        }

                        

                        if (s[i] == '.') {
                            count++;
                            if (count > 1) {
                                break;
                            }
                        }

                        if (s[i] == 'e') {
                            break;
                        }

                        if (i == lenght)
                            return s;
                    }
            }
                cout << "Неправильный ввод !!!\n";
                cin.clear();
            }
        }
        break;

    }
}